{"version":3,"sources":["components/Header.js","components/Footer.js","components/ChooseDomains.js","actions.js","types.js","components/CalculatePrice.js","components/ChooseOwner.js","components/BatchExecutionComponent.js","components/ExecuteRegistrations.js","components/Home.js","App.js","serviceWorker.js","reducer.js","configureStore.js","index.js"],"names":["connect","className","to","src","alt","process","Container","Row","href","target","rel","web3","Web3","rskOwner","eth","Contract","label","a","methods","available","utils","sha3","call","initialState","error","validating","unconfirmedLabels","confirmed","ChooseDomains","props","state","handleUploadFile","bind","confirm","data","this","setState","labels","i","length","push","match","allAvailable","then","result","Promise","all","errorMessage","labelsAvailable","inner","Alert","variant","onFileLoaded","map","k","key","Button","onClick","Error","Component","app","dispatch","type","fifsRegistrar","duration","price","CalculatePrice","durationInput","costOfOne","totalRif","handleDurationChange","setDuration","event","value","preventDefault","Number","getPrice","decimals","toBN","rif","mul","div","gasPrice","gas","commits","Math","ceil","reveals","rbtc","add","confirmPrice","confirmedPrice","Form","onSubmit","Group","Label","Control","onChange","min","toString","cost","ChooseOwner","address","handleChangeAddress","isValidChecksumAddress","confirmAddress","ownerAddress","style","color","disabled","BatchExecutionComponent","tx","commit","method","success","sender","send","from","on","_","Col","rlp","require","owner","secrets","commitments","makeCommitment","chunkArray","input","chunkSize","output","slice","validate","isAddress","isHexStrict","isBN","commitmentLists","interval","timeout","lastCommits","endTime","Date","poll","resolve","reject","allRevealChecks","canReveal","every","r","setTimeout","encodeOneRegister","secret","parsedOwner","toLowerCase","parsedSecret","parsedDuration","padLeft","numberToHex","parsedLabel","asciiToHex","encodeRegister","datas","size","encode","ExecuteRegistrations","makingCommitments","chunkedCommitments","chunkedDatas","batch","createCommitments","enableWallet","ready","n","randomHex","createSecrets","chunkedLabels","chunkedSecrets","makeCommitments","window","ethereum","enable","accounts","web3enabled","missingCommitmentConfirmations","pollUntilCommitted","missingRegisterConfirmations","commitmentSuccess","registerSuccess","batchCommit","transferAndCall","commitmentAmount","registerAmount","textAlign","exact","path","render","Home","Footer","Boolean","location","hostname","reducer","action","history","createBrowserHistory","middleware","thunk","routerMiddleware","store","preloadedState","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.03b1f99f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Header = () => (\n  <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n    <div className=\"container\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <img src=\"assets/img/logo.svg\" className=\"logo\" alt=\"logo\" />\n      </Link>\n      <h3>.rsk domains batch</h3>\n      <small>{process.env.REACT_APP_NETWORK_NAME}</small>\n    </div>\n  </nav>\n);\n\nexport default connect()(Header);\n","\nimport React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nexport default () => (\n  <footer>\n    <div className=\"footer-top\">\n      <Container>\n        <Row>\n          <div className=\"col-lg-12\">\n            <img src=\"assets/img/powered_by_iov.svg\" className=\"img-fluid powered_by\" alt=\"powered_by\" />\n          </div>\n          <div className=\"col-lg-4\">\n            <span className=\"footer-title mb-3\">What is RNS?</span>\n            <p className=\"mb-5\">RIF Name Service provides an architecture which enables the identification of blockchain addresses by human-readable names.</p>\n          </div>\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-2\">\n            <a href=\"https://gitter.im/rsksmart/rif-name-service\" target=\"_blank\" rel=\"noopener noreferrer\">Gitter</a>\n            <a href=\"https://rsksamrt.github.io/rif.rns/tools/subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Docs</a>\n            <a href=\"https://github.com/rnsdomains/rns-subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  </footer>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, Button } from 'react-bootstrap';\nimport CSVReader from 'react-csv-reader';\nimport Web3 from 'web3';\nimport { labelsAvailable } from '../actions';\n\nconst web3 = new Web3(process.env.REACT_APP_RSK_NODE);\nconst rskOwner = new web3.eth.Contract([\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"available\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n], process.env.REACT_APP_RSKOWNER_ADDRESS)\n\nasync function available (label) {\n  return rskOwner.methods.available(web3.utils.sha3(label)).call();\n}\n\nconst initialState = {\n  error: null,\n  validating: false,\n  unconfirmedLabels: null,\n  confirmed: 0,\n};\n\nclass ChooseDomains extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n    this.error = this.error.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  handleUploadFile(data) {\n    this.setState({ ...initialState, validating: true });\n\n    const labels = [];\n    for (let i = 0; i < data.length; i += 1) {\n      labels.push(data[i][0]);\n    }\n\n    for (let i = 0; i < labels.length; i += 1) {\n      const label = labels[i];\n\n      if (!label.length >= 5 || !label.match(/^[0-9a-z]+$/)) {\n        return this.error(`Invalid domain: ${label}`);\n      }\n    }\n\n    const allAvailable = [];\n\n    for (let i = 0; i < labels.length; i += 1) {\n      allAvailable.push(\n        available(labels[i]).then(result => {\n          if (!result) this.error(`Domain not available: ${labels[i]}. Please remove it from the list.`)\n        })\n      );\n    }\n\n    Promise.all(allAvailable).then(() => {\n      this.setState({ validating: false, unconfirmedLabels: labels })\n    });\n  }\n\n  error(errorMessage) {\n    this.setState({ error: errorMessage });\n  }\n\n  confirm() {\n    const { unconfirmedLabels } = this.state;\n    const { labelsAvailable } = this.props;\n\n    this.setState({ confirmed: unconfirmedLabels.length });\n    labelsAvailable(unconfirmedLabels);\n  }\n\n  render() {\n    const { error, validating, unconfirmedLabels, confirmed } = this.state;\n\n    let inner;\n\n    if (error) {\n      inner = <>\n        <Alert variant=\"danger\">\n          {error}\n        </Alert>\n        <CSVReader onFileLoaded={this.handleUploadFile} />\n      </>;\n    } else if (confirmed === 0 && !validating && !unconfirmedLabels) {\n      inner = <CSVReader onFileLoaded={this.handleUploadFile} />;\n    } else if (confirmed === 0 && validating && !unconfirmedLabels) {\n      inner = <p>Labels are valid, checking availability...</p>\n    } else if (confirmed === 0 && !validating && unconfirmedLabels) {\n      inner = <>\n        <p>Labels are valid and available!</p>\n        <ul>\n          {unconfirmedLabels.map((label, k) => (\n            <li key={k}>{label}</li>\n          ))}\n        </ul>\n        <Button onClick={this.confirm}>Confirm</Button>\n      </>;\n    } else if (unconfirmedLabels && confirmed !== 0) {\n      inner = <p>Confirmed domains to register: {confirmed}</p>;\n    } else {\n      throw new Error('Unhandled state.');\n    }\n\n    return (\n      <>\n        <p>Upload <code>csv</code> file with one column containing the labels to register. Ensure not to use .rsk at the end, lower cases, and no spaces.</p>\n        {inner}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  labels: state.app.labels,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  labelsAvailable: (labels) => dispatch(labelsAvailable(labels)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChooseDomains);\n","import {\n  LABELS_AVAILABLE,\n  CONFIRM_PRICE,\n  CONFIRM_ADDRESS,\n  READY,\n  SUCCESS_COMMITMENT,\n  SUCCES_REGISTER\n} from './types';\n\nexport const labelsAvailable = (labels) => ({\n  type: LABELS_AVAILABLE,\n  labels,\n});\n\nexport const confirmPrice = (duration, cost, totalRif) => ({\n  type: CONFIRM_PRICE,\n  duration,\n  cost,\n  totalRif,\n});\n\nexport const confirmAddress = (ownerAddress) => ({\n  type: CONFIRM_ADDRESS,\n  ownerAddress,\n});\n\nexport const ready = (commitmentAmount, registerAmount) => ({\n  type: READY,\n  commitmentAmount,\n  registerAmount,\n});\n\nexport const commitmentSuccess = () => ({\n  type: SUCCESS_COMMITMENT,\n});\n\nexport const registerSuccess = () => ({\n  type: SUCCES_REGISTER,\n});\n\n","export const LABELS_AVAILABLE = 'LABELS_AVAILABLE';\nexport const CONFIRM_PRICE = 'CONFIRM_PRICE';\nexport const CONFIRM_ADDRESS = 'CONFIRM_ADDRESS';\nexport const READY = 'READY';\nexport const SUCCESS_COMMITMENT = 'SUCCESS_COMMITMENT';\nexport const SUCCES_REGISTER = 'SUCCES_REGISTER';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport Web3 from 'web3';\nimport { confirmPrice } from '../actions';\n\nconst web3 = new Web3(process.env.REACT_APP_RSK_NODE);\nconst fifsRegistrar = new web3.eth.Contract([\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"expires\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"duration\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"price\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n], process.env.REACT_APP_FIFS_ADDRESS)\n\nasync function getPrice(duration) {\n  return fifsRegistrar.methods.price('', 0, duration).call();\n}\n\nclass CalculatePrice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      durationInput: 1,\n      duration: 0,\n      price: null,\n      costOfOne: null,\n      totalRif: null,\n    }\n\n    this.handleDurationChange = this.handleDurationChange.bind(this);\n    this.setDuration = this.setDuration.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  handleDurationChange(event) {\n    this.setState({ durationInput: event.target.value });\n  }\n\n  setDuration(event) {\n    event.preventDefault();\n\n    const duration = Number(this.state.durationInput);\n    this.setState({ duration });\n\n    const { labels } = this.props;\n\n    getPrice(duration).then(price => {\n      const decimals = web3.utils.toBN('1000000000000000000');\n\n      const totalRif = web3.utils.toBN(price)\n      const rif = totalRif.mul(web3.utils.toBN(labels.length)).div(decimals);\n\n      const gasPrice = web3.utils.toBN('60000000');\n      const gas = web3.utils.toBN('6800000');\n      const commits = web3.utils.toBN(Math.ceil(labels.length / 250));\n      const reveals = web3.utils.toBN(Math.ceil(labels.length / 35));\n\n      const rbtc = web3.utils.toBN(gasPrice.mul(gas).mul(commits.add(reveals)));\n\n      this.setState({ costOfOne: price, price: { rif, rbtc }, totalRif });\n    })\n  }\n\n  confirm() {\n    const { confirmPrice } = this.props;\n    const { duration, costOfOne, totalRif } = this.state;\n\n    confirmPrice(web3.utils.toBN(duration), web3.utils.toBN(costOfOne), totalRif);\n  }\n\n  render() {\n    const { labels, confirmedPrice } = this.props;\n    const { duration, durationInput, price } = this.state;\n\n    if (!labels) return null;\n\n    if (duration === 0) {\n      return <Form onSubmit={this.setDuration}>\n        <Form.Group>\n          <Form.Label>For how long do you want to register the domains?</Form.Label>\n          <Form.Control onChange={this.handleDurationChange} value={durationInput} type=\"number\" min={1} />\n          <Button type=\"submit\">Confirm</Button>\n        </Form.Group>\n      </Form>\n    } else if (duration > 0 && !price) {\n      return <p>Calculating price...</p>;\n    } else if (duration > 0 && price) {\n      return <>\n        <p>Price: {price.rif.toString()} RIF Tokens + ~{price.rbtc.toString()} RBTC (wei)</p>\n        {!confirmedPrice && <Button onClick={this.confirm}>Confirm</Button>}\n      </>;\n    } else {\n      throw new Error('Unhandled state.')\n    }\n  }\n}\n\nconst mapStateToProps = ({ app }) => ({\n  labels: app.labels,\n  confirmedPrice: app.confirmedPrice,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  confirmPrice: (duration, cost, totalRif) => dispatch(confirmPrice(duration, cost, totalRif)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CalculatePrice);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isValidChecksumAddress } from 'rskjs-util';\nimport { Form, Button } from 'react-bootstrap';\nimport { confirmAddress } from '../actions';\n\nclass ChooseOwner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: '',\n      error: null,\n    }\n\n    this.handleChangeAddress = this.handleChangeAddress.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  handleChangeAddress(event) {\n    const address = event.target.value;\n\n    if (isValidChecksumAddress(address, process.env.REACT_APP_NETWORK_ID)) {\n      this.setState(({ address, error: null }));\n    } else {\n      this.setState({ error: 'Invalid address' });\n    }\n  }\n\n  confirm(event) {\n    event.preventDefault();\n\n    const { confirmAddress } = this.props;\n    const { address } = this.state;\n\n    confirmAddress(address);\n  }\n\n  render() {\n    const { labels, confirmedPrice, ownerAddress } = this.props;\n    const { address, error } = this.state;\n\n    if (!labels || !confirmedPrice) return null;\n\n    if (ownerAddress) return <p>Owner address: {ownerAddress}</p>;\n\n    return <Form onSubmit={this.confirm}>\n      <Form.Group>\n        <Form.Label>Address to own the domains</Form.Label>\n        <Form.Control type=\"text\" onChange={this.handleChangeAddress} />\n        {error && <Form.Label style={{ color: 'red' }}>{error}</Form.Label>}\n        <Button type=\"submit\" disabled={!address || error}>Confirm</Button>\n      </Form.Group>\n    </Form>;\n  }\n}\n\nconst mapStateToProps = ({ app }) => ({\n  labels: app.labels,\n  confirmedPrice: app.confirmedPrice,\n  ownerAddress: app.ownerAddress,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  confirmAddress: (address) => dispatch(confirmAddress(address)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChooseOwner);\n","import React, { Component } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nclass BatchExecutionComponent extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      tx: null,\n      confirmed: false,\n    };\n\n    this.commit = this.commit.bind(this);\n  }\n\n  commit() {\n    const { method, success, sender } = this.props;\n\n    method.send({ from: sender })\n    .on('transactionHash', tx => {\n      this.setState({ tx });\n    })\n    .on('receipt', _ => {\n      this.setState({ confirmed: true });\n      success();\n    });\n  }\n\n  render () {\n    const { from, to } = this.props;\n    const { tx, confirmed } = this.state;\n\n    return <>\n      <Row>\n        <Col><label>From {from} to {to}</label></Col>\n        <Col><Button onClick={this.commit} disabled={!!tx}>Sign</Button></Col>\n      </Row>\n      {\n        tx && <>\n          <Row>\n            <Col>\n              <a href={`${process.env.REACT_APP_EXPLORER_TX_BASEURL}${tx}`} target=\"_blank\" rel=\"noopener noreferrer\">{tx}</a>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {\n                confirmed ? <p>Confirmed!</p> : <p>Waiting for confirmations...</p>\n              }\n            </Col>\n          </Row>\n        </>\n      }\n    </>\n  }\n}\n\nexport default BatchExecutionComponent;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container, Alert } from 'react-bootstrap';\nimport Web3 from 'web3';\nimport { ready, commitmentSuccess, registerSuccess } from '../actions';\nimport BatchExecutionComponent from './BatchExecutionComponent';\n\nconst rlp = require('rlp');\n\nconst commitmentChunkSize = 250;\nconst registerChunkSize = 35;\n\nconst web3 = new Web3(process.env.REACT_APP_RSK_NODE);\nconst fifsRegistrar = new web3.eth.Contract([\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"label\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"nameOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"secret\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"makeCommitment\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"commitment\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"canReveal\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n], process.env.REACT_APP_FIFS_ADDRESS);\n\nfunction createSecrets(n) {\n  const secrets = [];\n\n  for (let i = 0; i < n; i += 1) {\n    secrets.push(web3.utils.randomHex(32));\n  }\n\n  return secrets;\n}\n\nasync function makeCommitments(labels, owner, secrets) {\n  const commitments = [];\n\n  for (let i = 0; i < labels.length; i += 1) {\n    commitments.push(fifsRegistrar.methods.makeCommitment(\n      web3.utils.sha3(labels[i]),\n      owner,\n      secrets[i],\n    ).call());\n  }\n\n  return Promise.all(commitments);\n}\n\nfunction chunkArray (input, chunkSize) {\n  const output = [];\n\n  for (let i = 0; i < input.length; i += chunkSize) {\n    output.push(input.slice(i, i + chunkSize));\n  }\n\n  return output;\n}\n\n/**\n * Validates data for RSK Domains Batch\n * @param {string[]} labels of the domains to be registered\n * @param {address} owner for all registered domains\n * @param {bytes32[]} secrets for each of the names\n * @param {BN} duration for all registered domains\n */\nfunction validate(labels, owner, secrets, duration) {\n  if (labels.length !== secrets.length) {\n    throw new Error('Invalid amount of secrets');\n  }\n\n  for (let i = 0; i < labels.length; i += 1) {\n    if (!labels[i].length > 0 || !labels[i].match(/^[0-9a-z]+$/)) {\n      throw new Error(`Invalid label: ${labels[i]}`);\n    }\n  }\n\n  if (!web3.utils.isAddress(owner)) {\n    throw new Error('Invalid owner');\n  }\n\n  for (let i = 0; i < secrets.length; i += 1) {\n    if (!web3.utils.isHexStrict(secrets[i]) || secrets[i].length !== 66) {\n      throw new Error(`Invalid secret: ${secrets[i]}`);\n    }\n  }\n\n  if (!web3.utils.isBN(duration)) {\n    throw new Error('Invalid duration');\n  }\n}\n\nasync function pollUntilCommitted(commitmentLists, interval = 5000, timeout = 120000) {\n  const lastCommits = [];\n  const endTime = Number(new Date()) + timeout;\n\n  for (let i = 0; i < commitmentLists.length; i += 1) {\n    lastCommits.push(commitmentLists[i][commitmentLists[i].length - 1]);\n  }\n\n  const poll = (resolve, reject) => {\n    const allRevealChecks = [];\n\n    for (let i = 0; i < lastCommits.length; i += 1) {\n      allRevealChecks.push(fifsRegistrar.methods.canReveal(lastCommits[i]).call());\n    }\n\n    Promise.all(allRevealChecks).then((result) => {\n      if (result.every((r) => r)) resolve(result);\n      else if (Number(new Date()) < endTime) setTimeout(poll, interval, resolve, reject);\n      else reject(new Error('Polling timeout'));\n    });\n  };\n\n  return new Promise(poll);\n}\n\nconst REGISTER_SIGNATURE = '0xc2c414c8';\n\n/**\n * Encodes one register data to use with transferAndCall.\n * Assumes that parameters were validated with `validate`.\n * @param {string} label of the domain to be registered\n * @param {address} owner for all registered domains\n * @param {bytes32} secret valid for the commitment\n * @param {BN} duration for all registered domains\n */\nfunction encodeOneRegister(label, owner, secret, duration) {\n  const parsedOwner = owner.toLowerCase().slice(2);\n\n  const parsedSecret = secret.slice(2);\n\n  const parsedDuration = web3.utils.padLeft(\n    web3.utils.numberToHex(duration).slice(2),\n    64,\n    '0',\n  );\n\n  const parsedLabel = web3.utils.asciiToHex(label).slice(2);\n\n  return `${REGISTER_SIGNATURE}${parsedOwner}${parsedSecret}${parsedDuration}${parsedLabel}`;\n}\n\n/**\n * Encodes (rlp) register data to use with transferAndCall.\n * Assumes that parameters were validated with `validate`.\n * @param {string[]} labels of the domains to be registered\n * @param {address} owner for all registered domains\n * @param {bytes32[]} secrets for each of the names\n * @param {BN} duration for all registered domains\n * @param {Promise<BN>} price contract function for `price`\n */\nfunction encodeRegister(labels, owner, secrets, duration, cost) {\n  const datas = [];\n\n  for (let i = 0; i < labels.length; i += 1) {\n    datas.push(encodeOneRegister(labels[i], owner, secrets[i], duration));\n  }\n\n  return {\n    size: labels.length,\n    data: `0x${rlp.encode([cost, datas]).toString('hex')}`\n  };\n}\n\nclass ExecuteRegistrations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      makingCommitments: false,\n      chunkedCommitments: null,\n      chunkedDatas: null,\n      from: null,\n      canReveal: false,\n      batch: null,\n      rif: null,\n    }\n\n    this.createCommitments = this.createCommitments.bind(this);\n    this.enableWallet = this.enableWallet.bind(this);\n  }\n\n  createCommitments() {\n    const { labels, ownerAddress, duration, ready, cost } = this.props;\n\n    if (labels) {\n      const secrets = createSecrets(labels.length);\n\n      const chunkedLabels = chunkArray(labels, registerChunkSize);\n      const chunkedSecrets = chunkArray(secrets, registerChunkSize);\n\n      const chunkedDatas = [];\n\n      for (let i = 0; i < chunkedLabels.length; i += 1) {\n        validate(chunkedLabels[i], ownerAddress.toLowerCase(), chunkedSecrets[i], duration);\n        chunkedDatas.push(encodeRegister(chunkedLabels[i], ownerAddress.toLowerCase(), chunkedSecrets[i], duration, cost));\n      }\n\n      this.setState({ chunkedDatas });\n\n      makeCommitments(labels, ownerAddress.toLowerCase(), secrets).then(commitments => {\n        const chunkedCommitments = chunkArray(commitments, commitmentChunkSize);\n\n        ready(chunkedCommitments.length, chunkedDatas.length);\n\n        this.setState({ chunkedCommitments });\n      });\n    }\n  }\n\n  enableWallet() {\n    window.ethereum.enable().then(accounts => this.setState({ from: accounts[0] }));\n\n    const web3enabled = new Web3(window.web3);\n\n    const batch = new web3enabled.eth.Contract([\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"internalType\": \"bytes32[]\",\n            \"name\": \"commitments\",\n            \"type\": \"bytes32[]\"\n          }\n        ],\n        \"name\": \"batchCommit\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      }\n    ], process.env.REACT_APP_BATCH_ADDRESS);\n\n    const rif = new web3enabled.eth.Contract([\n      {\n        \"constant\": false,\n        \"inputs\": [\n          {\n            \"name\": \"_to\",\n            \"type\": \"address\"\n          },\n          {\n            \"name\": \"_value\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"name\": \"_data\",\n            \"type\": \"bytes\"\n          }\n        ],\n        \"name\": \"transferAndCall\",\n        \"outputs\": [\n          {\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n    ], process.env.REACT_APP_RIF_ADDRESS);\n\n    this.setState({ batch, rif });\n  }\n\n  shouldComponentUpdate({ missingCommitmentConfirmations }, { canReveal }) {\n    if (missingCommitmentConfirmations === 0 && !canReveal) {\n      const { chunkedCommitments } = this.state;\n      pollUntilCommitted(chunkedCommitments).then(() => this.setState({ canReveal: true }));\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      labels,\n      confirmedPrice,\n      ownerAddress,\n      missingCommitmentConfirmations,\n      missingRegisterConfirmations,\n      commitmentSuccess,\n      registerSuccess,\n      cost,\n    } = this.props;\n    const {\n      chunkedCommitments,\n      chunkedDatas,\n      from,\n      canReveal,\n      batch,\n      rif,\n    } = this.state;\n\n    if (!labels || !confirmedPrice || !ownerAddress) return null;\n\n    if (!chunkedCommitments || !chunkedDatas) {\n      return <>\n        <p>Prepare transactions transactions</p>\n        <Button onClick={this.createCommitments}>Prepare</Button>\n      </>\n    } else if (!from) {\n      return <Button onClick={this.enableWallet}>Enable wallet</Button>\n    } else if (from && chunkedCommitments) {\n      return <>\n        <p>Wallet address: {from}</p>\n        <Container>\n        {\n          chunkedCommitments.map((commitments, i) => (\n            <BatchExecutionComponent\n              key={i}\n              from={commitmentChunkSize * i + 1}\n              to={commitmentChunkSize * (i + 1) >= labels.length ? labels.length : commitmentChunkSize * (i + 1)}\n              sender={from}\n              method={batch.methods.batchCommit(commitments)}\n              success={commitmentSuccess}\n            />\n          ))\n        }\n        </Container>\n        {\n          missingCommitmentConfirmations === 0 && !canReveal && <p>Polling until committed... this can take more than a minute.</p>\n        }\n        {\n          missingCommitmentConfirmations === 0 && canReveal && <>\n            <p>Ready! Time to register!</p>\n            <Container>\n              {\n                chunkedDatas.map((datas, i) => (\n                  <BatchExecutionComponent\n                    key={i}\n                    from={registerChunkSize * i + 1}\n                    to={registerChunkSize * (i + 1) >= labels.length ? labels.length : registerChunkSize * (i + 1)}\n                    sender={from}\n                    method={rif.methods.transferAndCall(process.env.REACT_APP_BATCH_ADDRESS, cost.mul(web3.utils.toBN(datas.size)), datas.data)}\n                    success={registerSuccess}\n                  />\n                ))\n              }\n            </Container>\n          </>\n        }\n        {\n          missingRegisterConfirmations === 0 && <Alert variant=\"success\">\n            Success! Thanks for registering.\n          </Alert>\n        }\n      </>\n    } else {\n      throw new Error('Unhandled state.');\n    }\n  }\n}\n\nconst mapStateToProps = ({ app }) => ({\n  labels: app.labels,\n  confirmedPrice: app.confirmedPrice,\n  duration: app.duration,\n  cost: app.cost,\n  ownerAddress: app.ownerAddress,\n  missingCommitmentConfirmations: app.missingCommitmentConfirmations,\n  missingRegisterConfirmations: app.missingRegisterConfirmations,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  ready: (commitmentAmount, registerAmount) => dispatch(ready(commitmentAmount, registerAmount)),\n  commitmentSuccess: () => dispatch(commitmentSuccess()),\n  registerSuccess: () => dispatch(registerSuccess()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExecuteRegistrations);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ChooseDomains from './ChooseDomains';\nimport CalculatePrice from './CalculatePrice';\nimport ChooseOwner from './ChooseOwner';\nimport ExecuteRegistrations from './ExecuteRegistrations';\n\nexport default () => (\n  <Container style={{ textAlign: 'center' }}>\n    <Row>\n      <Col>\n        <h3>Choose domains</h3>\n        <ChooseDomains />\n      </Col>\n    </Row>\n    <Row><Col><hr /></Col></Row>\n    <Row>\n      <Col>\n        <h3>Calculate price</h3>\n        <CalculatePrice />\n      </Col>\n    </Row>\n    <Row><Col><hr /></Col></Row>\n    <Row>\n      <Col>\n        <h3>Choose owner</h3>\n        <ChooseOwner />\n      </Col>\n    </Row>\n    <Row><Col><hr /></Col></Row>\n    <Row>\n      <Col>\n        <h3>Execute registration</h3>\n        <ExecuteRegistrations />\n      </Col>\n    </Row>\n  </Container>\n);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport {\n  Header,\n  Footer,\n  Home,\n} from './components';\nimport { connect } from 'react-redux';\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" render={() => <Home />} />\n    </Switch>\n    <Footer />\n  </>\n);\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport {\n  LABELS_AVAILABLE,\n  CONFIRM_PRICE,\n  CONFIRM_ADDRESS,\n  SUCCESS_COMMITMENT,\n  READY,\n} from './types';\n\nconst initialState = {\n  labels: null,\n  confirmedPrice: false,\n  duration: 0,\n  cost: null,\n  totalRif: null,\n  ownerAddress: null,\n  missingCommitmentConfirmations: -1,\n  missingRegisterConfirmations: -1,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LABELS_AVAILABLE:\n      return {\n        ...state,\n        labels: action.labels\n      };\n    case CONFIRM_PRICE:\n      return {\n        ...state,\n        confirmedPrice: true,\n        duration: action.duration,\n        cost: action.cost,\n        totalRif: action.totalRif,\n      }\n    case CONFIRM_ADDRESS:\n      return {\n        ...state,\n        ownerAddress: action.ownerAddress,\n      }\n    case READY:\n      return {\n        ...state,\n        missingCommitmentConfirmations: action.commitmentAmount,\n        missingRegisterConfirmations: action.registerAmount,\n      }\n    case SUCCESS_COMMITMENT:\n      return {\n        ...state,\n        missingCommitmentConfirmations: state.missingCommitmentConfirmations-1,\n      };\n    default: return state;\n  }\n};\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: reducer,\n});\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from './reducer';\n\nexport const history = createBrowserHistory();\n\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    compose(\n      applyMiddleware(...middleware),\n    ),\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore, { history } from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}